var documenterSearchIndex = {"docs":
[{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ControlledHiddenMarkovModels]\nOrder   = [:module]","category":"page"},{"location":"api/#ControlledHiddenMarkovModels.CHMMs","page":"API reference","title":"ControlledHiddenMarkovModels.CHMMs","text":"CHMMs\n\nAlias for ControlledHiddenMarkovModels.\n\n\n\n\n\n","category":"module"},{"location":"api/#ControlledHiddenMarkovModels.ControlledHiddenMarkovModels","page":"API reference","title":"ControlledHiddenMarkovModels.ControlledHiddenMarkovModels","text":"ControlledHiddenMarkovModels\n\nA package for Hidden Markov Models with exogenous control variables.\n\n\n\n\n\n","category":"module"},{"location":"api/#Types","page":"API reference","title":"Types","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ControlledHiddenMarkovModels]\nOrder   = [:type]","category":"page"},{"location":"api/#ControlledHiddenMarkovModels.AbstractControlledHMM","page":"API reference","title":"ControlledHiddenMarkovModels.AbstractControlledHMM","text":"AbstractControlledHMM\n\nAlias for AbstractControlledHiddenMarkovModel.\n\n\n\n\n\n","category":"type"},{"location":"api/#ControlledHiddenMarkovModels.AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.AbstractControlledHiddenMarkovModel","text":"AbstractControlledHiddenMarkovModel\n\nInterface for Hidden Markov Models with arbitrary emissions and exogenous control variables.\n\nRequired methods\n\nnb_states(hmm, par)\ninitial_distribution(hmm, par)\ntransition_matrix(hmm, control, par)\nemission_parameters(hmm, control, par)\nemission_distribution(hmm, s, θ)\n\nCompatible with\n\nrand(rng, hmm, control_sequence, par)\nlogdensityof(hmm, obs_sequence, control_sequence, par; safe)\ninfer_current_state(hmm, obs_sequence, control_sequence, par; safe)\n\n\n\n\n\n","category":"type"},{"location":"api/#ControlledHiddenMarkovModels.AbstractHMM","page":"API reference","title":"ControlledHiddenMarkovModels.AbstractHMM","text":"AbstractHMM\n\nAlias for AbstractHiddenMarkovModel.\n\n\n\n\n\n","category":"type"},{"location":"api/#ControlledHiddenMarkovModels.AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.AbstractHiddenMarkovModel","text":"AbstractHiddenMarkovModel\n\nInterface for Hidden Markov Models with arbitrary emissions.\n\nRequired methods\n\nnb_states(hmm, par)\ninitial_distribution(hmm, par)\ntransition_matrix(hmm, par)\nemission_distribution(hmm, s, par)\n\nCompatible with\n\nrand(rng, hmm, T, par)\nlogdensityof(hmm, obs_sequence, par)\ninfer_current_state(hmm, obs_sequence, par)\n\n\n\n\n\n","category":"type"},{"location":"api/#ControlledHiddenMarkovModels.HMM","page":"API reference","title":"ControlledHiddenMarkovModels.HMM","text":"HMM\n\nAlias for HiddenMarkovModel.\n\n\n\n\n\n","category":"type"},{"location":"api/#ControlledHiddenMarkovModels.HiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.HiddenMarkovModel","text":"HiddenMarkovModel{R1,R2,D}\n\nConcrete subtype of AbstractHMM which stores the state and observation parameters directly.\n\nFields\n\np0::Vector{R1}\nP::Matrix{R2}\nemissions::Vector{D}\n\nCompatible with\n\nbaum_welch_multiple_sequences(obs_sequences, hmm_init, par; kwargs...)\nbaum_welch(obs_sequence, hmm_init, par; kwargs...)\n\n\n\n\n\n","category":"type"},{"location":"api/#Methods","page":"API reference","title":"Methods","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ControlledHiddenMarkovModels]\nOrder   = [:function]","category":"page"},{"location":"api/#Base.rand","page":"API reference","title":"Base.rand","text":"rand(rng, hmm::AbstractHMM, T, par)\n\nSample a trajectory of length T from hmm with parameters par.\n\nReturns a couple (state_sequence, obs_sequence).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.rand-Tuple{Random.AbstractRNG, AbstractControlledHiddenMarkovModel, Any, Any}","page":"API reference","title":"Base.rand","text":"rand(rng, hmm::AbstractControlledHMM, control_sequence, par)\n\nSample a trajectory from hmm with controls control_sequence and parameters par.\n\nReturns a couple (state_sequence, obs_sequence).\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.backward!-Tuple{Matrix, Matrix, Vector, Matrix, Matrix}","page":"API reference","title":"ControlledHiddenMarkovModels.backward!","text":"backward!(β, eβ, c, obs_density, P)\n\nPerform a backward pass by mutating β and eβ. Comes after forward pass.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.baum_welch-Union{Tuple{H}, Tuple{Any, H}, Tuple{Any, H, Any}} where H<:HiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.baum_welch","text":"baum_welch(obs_sequences, hmm_init::HMM[, par; maxiter, tol])\n\nApply the Baum-Welch algorithm on multiple observation sequences, starting from an initial HMM hmm_init with parameters par (not modifed).\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.emission_distribution-Union{Tuple{H}, Tuple{H, Any, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.emission_distribution","text":"emission_distribution(hmm::AbstractControlledHMM, s, θ)\n\nCompute the emission distribution in state s for hmm with emission parameters θ. Note that θ was computed using emission_parameters(hmm, control, par).\n\nThe object returned must be sampleable and implement DensityInterface.jl.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.emission_distribution-Union{Tuple{H}, Tuple{H, Any, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.emission_distribution","text":"emission_distribution(hmm::AbstractHMM, s, par)\n\nCompute the emission distribution in state s for hmm with parameters par.\n\nThe object returned must be sampleable and implement DensityInterface.jl.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.emission_parameters-Union{Tuple{H}, Tuple{H, Any, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.emission_parameters","text":"emission_parameters(hmm::AbstractControlledHMM, control, par)\n\nCompute the parameters of all emission distributions for hmm with control control and parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.emission_type-Union{Tuple{Type{HiddenMarkovModel{R1, R2, D}}}, Tuple{D}, Tuple{R2}, Tuple{R1}} where {R1, R2, D}","page":"API reference","title":"ControlledHiddenMarkovModels.emission_type","text":"emission_type(::Type{<:HMM})\n\nReturn the type of an emission distribution object.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.fit_mle_from_multiple_sequences-Union{Tuple{D}, Tuple{Type{D}, Any, Any}} where D","page":"API reference","title":"ControlledHiddenMarkovModels.fit_mle_from_multiple_sequences","text":"fit_mle_from_multiple_sequences(::Type{D}, xs, ws)\n\nFit a distribution of type D based on multiple sequences of observations xs associated with multiple sequences of weights ws.\n\nMust accept arbitrary iterables for xs and ws.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.fit_mle_from_single_sequence-Union{Tuple{D}, Tuple{Type{D}, AbstractVector, AbstractVector}} where D","page":"API reference","title":"ControlledHiddenMarkovModels.fit_mle_from_single_sequence","text":"fit_mle_from_single_sequence(::Type{D}, x, w)\n\nFit a distribution of type D based on a single sequence of observations x associated with a single sequence of weights w.\n\nDefaults to Distributions.fit_mle, with a special case for vectors of vectors (because Distributions.fit_mle accepts matrices instead). Users are free to override this default for concrete distributions.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.forward!-Tuple{Matrix, Vector, Matrix, Vector, Matrix}","page":"API reference","title":"ControlledHiddenMarkovModels.forward!","text":"forward!(α, c, obs_density, p0, P)\n\nPerform a forward pass by mutating α and c.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.forward_backward!-Tuple{Matrix, Vector, Matrix, Matrix, Matrix, Array{<:Any, 3}, Matrix, Vector, Matrix}","page":"API reference","title":"ControlledHiddenMarkovModels.forward_backward!","text":"forward_backward!(α, c, β, eβ, γ, ξ, obs_density, p0, P)\n\nApply the full forward-backward algorithm by mutating α, c, β, eβ, γ and ξ.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.infer_current_state","page":"API reference","title":"ControlledHiddenMarkovModels.infer_current_state","text":"infer_current_state(hmm::AbstractHMM, obs_sequence, par; safe)\n\nInfer the posterior distribution of the current state given obs_sequence for hmm with parameters par.\n\n\n\n\n\n","category":"function"},{"location":"api/#ControlledHiddenMarkovModels.infer_current_state-2","page":"API reference","title":"ControlledHiddenMarkovModels.infer_current_state","text":"infer_current_state(hmm::AbstractControlledHMM, obs_sequence, control_sequence, par; safe)\n\nInfer the posterior distribution of the current state given obs_sequence for hmm with controls control_sequence and parameters par.\n\n\n\n\n\n","category":"function"},{"location":"api/#ControlledHiddenMarkovModels.initial_distribution-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.initial_distribution","text":"initial_distribution(hmm::AbstractControlledHMM, par)\n\nReturn the vector of initial state probabilities for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.initial_distribution-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.initial_distribution","text":"initial_distribution(hmm::AbstractHMM, par)\n\nCompute the vector of initial state probabilities for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.initialize_obs_density-Tuple{Any, AbstractHiddenMarkovModel, Any}","page":"API reference","title":"ControlledHiddenMarkovModels.initialize_obs_density","text":"initialize_obs_density(obs_sequence, hmm, par)\n\nCreate a new observation density matrix and apply update_obs_density!.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.is_prob_vec-Union{Tuple{AbstractVector{R}}, Tuple{R}} where R","page":"API reference","title":"ControlledHiddenMarkovModels.is_prob_vec","text":"is_prob_vec(p; atol)\n\nCheck if p is a probability distribution vector.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.iszero_safe-Tuple{R} where R","page":"API reference","title":"ControlledHiddenMarkovModels.iszero_safe","text":"iszero_safe(x::R)\n\nCheck if a number x is zero by comparing its inverse with typemax(R).\n\nThis is useful in the following case:\n\njulia> x = 1e-320\n1.0e-320\n\njulia> iszero(x)\nfalse\n\njulia> inv(x)\nInf\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.light_forward-Tuple{Any, AbstractHiddenMarkovModel, Any}","page":"API reference","title":"ControlledHiddenMarkovModels.light_forward","text":"light_forward(obs_sequence, hmm::AbstractHMM, par)\n\nPerform a lightweight forward pass with minimal storage requirements.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.light_forward-Tuple{Any, Any, AbstractControlledHiddenMarkovModel, Any}","page":"API reference","title":"ControlledHiddenMarkovModels.light_forward","text":"light_forward(obs_sequence, control_sequence, hmm::AbstractControlledHMM, par)\n\nPerform a lightweight forward pass with minimal storage requirements.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.log_initial_distribution-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.log_initial_distribution","text":"log_initial_distribution(hmm::AbstractControlledHMM, par)\n\nReturn the vector of initial state probabilities in log scale for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.log_initial_distribution-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.log_initial_distribution","text":"log_initial_distribution(hmm::AbstractHMM, par)\n\nCompute the vector of initial state probabilities in log scale for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.log_transition_matrix-Union{Tuple{H}, Tuple{H, Any, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.log_transition_matrix","text":"log_transition_matrix(hmm::AbstractControlledHMM, control, par)\n\nCompute the state transition matrix in log scale for hmm with control control and parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.log_transition_matrix-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.log_transition_matrix","text":"log_transition_matrix(hmm::AbstractHMM, par)\n\nCompute the state transition matrix in log scale for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.logsumexp-Tuple{Any}","page":"API reference","title":"ControlledHiddenMarkovModels.logsumexp","text":"logsumexp(a)\n\nUse logsumexp_offline to compute the logsumexp of an iterable a.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.logsumexp_stream-Union{Tuple{T}, Tuple{Type{T}, Any}} where T","page":"API reference","title":"ControlledHiddenMarkovModels.logsumexp_stream","text":"logsumexp_stream(::Type{T}, a)\n\nCompute the logsumexp function in a single pass for an iterable a with elements of type T. Source: https://www.nowozin.net/sebastian/blog/streaming-log-sum-exp-computation.html\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.make_log_prob_vec!-Tuple{AbstractVector}","page":"API reference","title":"ControlledHiddenMarkovModels.make_log_prob_vec!","text":"make_log_prob_vec!(logp)\n\nShift logp so that exp.(logp) becomes a probability distribution vector.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.make_log_trans_mat!-Tuple{AbstractMatrix}","page":"API reference","title":"ControlledHiddenMarkovModels.make_log_trans_mat!","text":"make_log_trans_mat!(logP)\n\nScale logP so that exp.(logP) becomes a transition (stochastic) matrix.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.make_prob_vec!-Tuple{AbstractVector}","page":"API reference","title":"ControlledHiddenMarkovModels.make_prob_vec!","text":"make_prob_vec!(p)\n\nScale p into a probability distribution vector.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.make_trans_mat!-Tuple{AbstractMatrix}","page":"API reference","title":"ControlledHiddenMarkovModels.make_trans_mat!","text":"make_trans_mat!(P)\n\nScale P into a transition (stochastic) matrix.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.marginals!-Tuple{Matrix, Array, Matrix, Matrix, Matrix, Matrix}","page":"API reference","title":"ControlledHiddenMarkovModels.marginals!","text":"marginals!(γ, ξ, α, β, eβ, P)\n\nCompute state and transition marginals by mutating γ and ξ. Comes after backward pass.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.nb_states-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.nb_states","text":"nb_states(hmm::AbstractControlledHMM, par)\n\nReturn the number of states for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.nb_states-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.nb_states","text":"nb_states(hmm::AbstractHMM, par)\n\nCompute the number of states for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.rand_prob_vec-Union{Tuple{R}, Tuple{Random.AbstractRNG, Type{R}, Integer}} where R","page":"API reference","title":"ControlledHiddenMarkovModels.rand_prob_vec","text":"rand_prob_vec(rng, n)\n\nReturn a random probability distribution vector of size n.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.rand_trans_mat-Union{Tuple{R}, Tuple{Random.AbstractRNG, Type{R}, Integer}} where R","page":"API reference","title":"ControlledHiddenMarkovModels.rand_trans_mat","text":"rand_trans_mat(rng, n)\n\nReturn a transition (stochastic) matrix of size n with random transition probability distributions.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.transition_matrix-Union{Tuple{H}, Tuple{H, Any, Any}} where H<:AbstractControlledHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.transition_matrix","text":"transition_matrix(hmm::AbstractControlledHMM, control, par)\n\nCompute the state transition matrix for hmm with control control and parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.transition_matrix-Union{Tuple{H}, Tuple{H, Any}} where H<:AbstractHiddenMarkovModel","page":"API reference","title":"ControlledHiddenMarkovModels.transition_matrix","text":"transition_matrix(hmm::AbstractHMM, par)\n\nCompute the state transition matrix for hmm with parameters par.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.uniform_prob_vec-Tuple{Integer}","page":"API reference","title":"ControlledHiddenMarkovModels.uniform_prob_vec","text":"uniform_prob_vec(n)\n\nReturn a uniform probability distribution vector of size n.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.uniform_trans_mat-Tuple{Integer}","page":"API reference","title":"ControlledHiddenMarkovModels.uniform_trans_mat","text":"uniform_trans_mat(n)\n\nReturn a transition (stochastic) matrix of size n with uniform transition probability distributions.\n\n\n\n\n\n","category":"method"},{"location":"api/#ControlledHiddenMarkovModels.update_obs_density!-Tuple{AbstractMatrix, Any, AbstractHiddenMarkovModel, Any}","page":"API reference","title":"ControlledHiddenMarkovModels.update_obs_density!","text":"update_obs_density!(obs_density, obs_sequence, hmm::AbstractHMM, par)\n\nUpdate the values obs_density[s, t] using the emission density of hmm with parameters par applied to obs_sequence[t].\n\n\n\n\n\n","category":"method"},{"location":"api/#DensityInterface.logdensityof","page":"API reference","title":"DensityInterface.logdensityof","text":"logdensityof(hmm::AbstractHMM, obs_sequence, par; safe)\n\nCompute the log likelihood of obs_sequence for hmm with parameters par.\n\n\n\n\n\n","category":"function"},{"location":"api/#DensityInterface.logdensityof-2","page":"API reference","title":"DensityInterface.logdensityof","text":"logdensityof(hmm::AbstractControlledHMM, obs_sequence, control_sequence, par; safe)\n\nCompute the log likelihood of obs_sequence for hmm with controls control_sequence and parameters par.\n\n\n\n\n\n","category":"function"},{"location":"api/#Index","page":"API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ControlledHiddenMarkovModels]","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ControlledHiddenMarkovModels","category":"page"},{"location":"#ControlledHiddenMarkovModels.jl","page":"Home","title":"ControlledHiddenMarkovModels.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation of ControlledHiddenMarkovModels.jl, a package for Hidden Markov Models with exogenous control variables.","category":"page"},{"location":"#Why-would-you-need-it?","page":"Home","title":"Why would you need it?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package focuses on discrete-time HMMs with a finite state space, but it's not the only one! A few alternatives that I am aware of:","category":"page"},{"location":"","page":"Home","title":"Home","text":"HMMBase.jl\nHMMGradients.jl\nMarkovModels.jl\nMitosis.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"I started my own package because I needed specific features that were not simultaneously available elsewhere (to the best of my knowledge):","category":"page"},{"location":"","page":"Home","title":"Home","text":"Control variables (obviously)\nCompatibility with generic emissions (beyond Distributions.jl)\nNumerical stability thanks to log-scale computations\nCompatibility with automatic differentiation of parameters\nin forward mode\nin reverse mode (WIP)","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the package, open a Julia Pkg REPL and run","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/gdalle/ControlledHiddenMarkovModels.jl","category":"page"},{"location":"#Mathematical-background","page":"Home","title":"Mathematical background","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To understand the algorithms implemented here, check out the following literature:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A Tutorial on Hidden Markov Models and Selected Applications in Speech Recognition, Lawrence R. Rabiner (1989)","category":"page"},{"location":"","page":"Home","title":"Home","text":"An Input Output HMM Architecture, Yoshua Bengio and Paolo Frasconi (1994)","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"danger: Coming soon!\nIn the meantime, please check out test/hmm.jl and test/hmm_controlled.jl in the GitHub repository for examples.","category":"page"}]
}
